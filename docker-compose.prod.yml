services:
  # Backend Service (Production)
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: flake-wire-backend-prod
    restart: always
    environment:
      - NODE_ENV=production
      - PORT=3001
    env_file:
      - .env
    ports:
      - "3001:3001"
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - flake-wire-network
    volumes:
      - ./logs:/app/logs
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  # Frontend Service (Production)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: flake-wire-frontend-prod
    restart: always
    environment:
      - REACT_APP_API_URL=http://localhost:3001/api
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - flake-wire-network
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /var/cache/nginx
      - /var/run
      - /tmp
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          cpus: '0.25'
          memory: 64M

networks:
  flake-wire-network:
    driver: bridge
    name: flake-wire-prod-network

volumes:
  logs:
    driver: local
